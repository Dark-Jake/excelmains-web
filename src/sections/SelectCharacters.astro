---
import { CHARACTERS } from "@/consts/characters"
import { REGIONS } from "@/consts/regions"

const ListOFCharacters = CHARACTERS.map((character) => {
  const { region } = character
  const regionName = REGIONS[region]?.name || ""
  return { ...character, regionName }
})
---


<section class="my-40">
  <h3 class="font-atomic text-5xl text-primary text-center">
    Guia del Personaje
  </h3>

  <div class="mt-30 flex flex-col items-center justify-center gap-8">
    <article
     class="relative flex w-full flex-col items-center justify-center"
     style="view-transition-name: character;"
    >
      <header
        class="relative flex w-full flex-col items-center justify-center"
      >
        <div
          class="absolute inset-0 -z-20 w-auto bg-center bg-no-repeat"
          style="
           background-image: url('img/effects/character-bacground.webp'); overflow-visible 
           background-size: 120%;
           mask-image: linear-gradient(to bottom, black 50% , transparent 100%);"
        >
        </div>
        <img
          class="character-photo w-auto h-[480px] object-contain"
          alt="Splashart"
          src="/excelmains-web/img/characters/big/hutao-big.webp"
          style="
            filter: drop-shadow(0 0 20px rgba(0, 0, 0, .5));
            mask-image: linear-gradient(to bottom, black 75%, transparent 100%);"
        />
        
        <div class="absolute bottom-20 max-w-md text-wrap" style="width: 100%;">
          <h4 class="character-title inset-0 text-8xl text-center">hu tao</h4>
        </div>

        <img
          class="character-flag h-20 w-auto object-contain object-center"
          alt="Bandera de Liyue"
          src="/excelmains-web/img/flags/Ly.svg"
        />
      </header>

      <footer class="absolute bottom-0 flex w-full justify-between text-center text-primary">
        <div class="flex flex-col gap-y-2">
          <h4 class="text-lg">Region</h4>
          <p class="text-lg font-bold">Liyue</p>
          <a
            href="#"
            class="mt-10 inline-block font-semibold text-accent transition hover:scale-110"
            >
              Ver speedrun
              </a>
        </div>

        <div class="flex flex-col gap-y-2">
          <h4 class="text-lg text-primary">Vision</h4>
          <p class="text-lg font-bold">Pyro</p>
          <a
            href="#"
            class="mt-10 inline-block font-semibold text-accent transition hover:scale-110"
            >
              Ver Guia
              </a>
        </div>
      </footer>
    </article>
    <aside class=" mt-4 grid gap-x-10 gap-y-4">
      {
        ListOFCharacters.map(({ id, name, region, regionName }) => (
          <a
            class="character-link group relative flex h-20 items-center justify-center"
            title={`Mira la guia de ${name}`}
            href={`/characters/${id}`}
            data-id={id}
            data-name={name}
            data-region={region}
            data-region-name={regionName}
          >
            <img
              loading="lazy"
              src={`/excelmains-web/img/characters/small/${id}-small.webp`}
              alt={`Guia de ${name}`}
              class="character-image -mt-20 h-24 w-auto object-contain px-2 transition group-hover:scale-110"
            />
          </a>
        ))
      }
    </aside>
  </div>
</section>

<script>
  const characterLinks = document.querySelectorAll(".character-link")
  const characterTitle = document.querySelector(".character-title") as HTMLImageElement
  const characterPhoto = document.querySelector(".character-photo") as HTMLImageElement
  const characterRegion = document.querySelector(".character-flag") as HTMLImageElement

  characterLinks.forEach((link) => {
  link.addEventListener("mouseenter", (event) => {
    const target = event.currentTarget;
    if (target instanceof HTMLElement) {
      const { id, name, region, regionName } = target.dataset;

      const characterSrc = `/excelmains-web/img/characters/big/${id}-big.webp`;

      characterPhoto.src = characterSrc;
      characterTitle.innerText = name?.toLocaleLowerCase() ?? "";
      characterRegion.src = `/excelmains-web/img/flags/${region}.svg`;

      characterPhoto.alt = `Fotografía de ${name}`;
      characterRegion.alt = `Escudo de ${regionName}`;
    }
  });
});
</script>

<style>
	.character-link {
		background: linear-gradient(
			to bottom,
			rgba(255, 255, 255, 0.1) 0%,
			transparent 40%,
			transparent 100%
		);
		transition: all 0.5s ease;
	}

	.character-link::before {
		content: "";
		position: absolute;
		inset: 0;
		display: block;
		background: linear-gradient(
			to bottom,
			rgba(255, 255, 255, 0.2) 0%,
			transparent 40%,
			transparent 100%
		);
		opacity: 0;
		height: 50%;
		transition:
			opacity 0.2s ease-in-out,
			height 0.2s ease-in-out;
	}

	.character-link:hover::before {
		opacity: 0.8;
		height: 90%;
		box-shadow: 0 0px 3px rgba(50, 50, 50, 0.75);
	}

	.character-image {
    z-index: 2;
		transition: transform 0.3s ease-in-out;
    height: 110%;
    mask-image: linear-gradient(to bottom, black 50%, transparent 100%);
	}

	.character-link:hover .boxer-image {
		transform: scale(1.1);
	}

	aside {
		display: grid;
		grid-template-columns: repeat(18, 1fr);
		grid-auto-rows: 40px;

		a {
			grid-column: span 2;

			&:nth-child(17n + 10) {
				grid-column-start: 2;
				grid-column-end: 4;
			}
		}
	}

  .character-title {
  font-family: 'atomic';
  color: transparent;
  background-image: linear-gradient(180deg, #4EC651, #00999C, #0061BB, #17117A); /* Agregamos más colores al degradado */
  -webkit-background-clip: text;
  background-clip: text;
  text-align: center;
  transform: skewY(-6deg);
  -webkit-text-stroke: .5px black; /* Agregamos un borde negro alrededor del texto */
  text-stroke: .5px black; /* Agregamos un borde negro alrededor del texto */
}

</style>
